/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def build_versions = [:]
build_versions.global_compile_sdk = 28
build_versions.global_min_sdk = 26
build_versions.global_target_sdk = 26
ext.build_versions = build_versions

ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '3.3.2'
versions.kotlin = "1.3.30"
versions.navigation = "2.1.0-alpha01"
versions.support = "1.0.0"
versions.lifecycle = "2.0.0"
versions.arch_core = "2.0.1"
versions.constraint_layout_version = "2.0.0-alpha2"
versions.support_test_version = "1.0.2"
versions.room = "2.1.0-alpha03"
versions.work = "2.0.0-rc01"
versions.topsnackbar = "1.1.1"
versions.v4 = "1.0.0"
versions.appcompat = "1.0.2"
versions.room = "2.1.0-alpha03"
versions.paging = "2.1.0-rc01"
versions.corektx = "1.0.1"
versions.retrofit = "2.5.0"
versions.okhttp3 = "3.12.1"
versions.gson = "2.8.5"
versions.gson_converter = "2.5.0"
versions.junit_local_test = "4.12"
versions.assertion_junit = "1.1.0"
versions.espresso_test = "3.1.1"
versions.test_rule = "1.1.2-alpha01"
versions.material_version = "1.1.0-alpha02"
versions.coroutine_core = "1.1.1"
versions.kotlin_coroutine_adapter = "0.9.2"
versions.rx_android = "2.0.1"
versions.rxjava2 = "2.1.3"
versions.support_annotations = "1.0.0-alpha1"
versions.runner = "1.1.0-alpha4"
versions.test_core = "1.1.0"
versions.mockito_core = "2.8.9"
versions.mockito_inline = "2.23.4"
versions.mockito_android = "2.22.0"
versions.hamcrest_library = "2.1"
versions.assertion_truth = "1.0.0"
versions.assertion_google_truth = "0.42"
versions.espresso_contrib = "3.1.0"
versions.espresso_accessibilty = "3.1.0"
versions.espresso_web = "3.1.0"
versions.idling_concurrent = "3.1.0"
versions.espresso_idling_resource = "3.1.0"
versions.dagger = "2.22.1"
versions.glide = "4.8.0@aar"
versions.volley = "1.1.0"
versions.leak_canary = "1.6.3"
versions.anko = "0.10.8"

deps.versions = versions

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

//group kotlin libraries
def kotlin = [:]
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"

deps.kotlin = kotlin

//UI component libraries
def support = [:]
support.annotation = "androidx.annotation:annotation:$versions.support"
support.appcompat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.material_design = "com.google.android.material:material:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout_version"
support.core_ktx = "androidx.core:core-ktx:$versions.corektx"

deps.support = support

def ui = [:]
ui.snackbar = "com.androidadvance:topsnackbar:$versions.topsnackbar"

deps.ui = ui

//Store database
def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.coroutine = "androidx.room:room-coroutines:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"

deps.room = room

//Livecycle
def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"

deps.lifecycle = lifecycle

//Retrofit
def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3"
retrofit.coroutine_adapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.kotlin_coroutine_adapter"

deps.retrofit = retrofit

//Network component
def network = [:]
//Volley library
network.volley = "com.android.volley:volley:$versions.volley"
//Retrofit library
network.retrofit_runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
network.retrofit_gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
network.retrofit_mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
network.retrofit_okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3"
network.retrofit_coroutine_adapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.kotlin_coroutine_adapter"

deps.network = network

//Navigation component
def navigation = [:]
navigation.fragment = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"

deps.navigation = navigation

//Loading Paging
def paging = [:]
paging.runtime = "androidx.paging:paging-runtime-ktx:$versions.paging"

deps.paging = paging

//Work manager
def work_manager = [:]
work_manager.runtime = "androidx.work:work-runtime:$versions.work"

deps.work_manager = work_manager

//Json parsing
def json = [:]
json.gson = "com.google.code.gson:gson:$versions.gson"
json.converter = "com.squareup.retrofit2:converter-gson:$versions.gson_converter"

deps.json = json

def test = [:]
//Required for unit testing
test.local = "junit:junit:$versions.junit_local_test"
//Core library
test.test_core = "androidx.test:core:$versions.test_core"
test.mockito_core = "org.mockito:mockito-core:$versions.mockito_core"
//Required to open final class
test.mockito_inline = "org.mockito:mockito-inline:$versions.mockito_inline"
test.mockito_android = "org.mockito:mockito-android:$versions.mockito_android"
//Assertion
test.assertion_junit = "androidx.test.ext:junit:$versions.assertion_junit"
test.assertion_truth = "androidx.test.ext:truth:$versions.assertion_truth"
test.assertion_google_truth = "com.google.truth:truth:$versions.assertion_google_truth"
//Espresso dependencies
test.espresso = "androidx.test.espresso:espresso-core:$versions.espresso_test"
test.espresso_contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso_contrib"
test.espresso_acessibility = "androidx.test.espresso:espresso-accessibility:$versions.espresso_accessibilty"
test.espresso_web = "androidx.test.espresso:espresso-web:$versions.espresso_web"
test.espresso_idling = "androidx.test.espresso.idling:idling-concurrent:$versions.idling_concurrent"
test.espresso_idling_resource = "androidx.test.espresso:espresso-idling-resource:$versions.espresso_idling_resource"
test.rule = "androidx.test:rules:$versions.test_rule"
//Required for instrumented tests
test.runner = "androidx.test:runner:$versions.runner"
test.hamcrest_library = "org.hamcrest:hamcrest-library:$versions.hamcrest_library"

test.arch_core_test = "androidx.arch.core:core-testing:$versions.arch_core"

deps.test = test

def coroutines = [:]
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutine_core"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine_core"

deps.coroutines = coroutines

def rx = [:]
rx.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
rx.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"

deps.rx = rx

def dagger = [:]
dagger.core = "com.google.dagger:dagger:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"

deps.dagger = dagger

//Loading image
def glide = [:]
glide.glide = "com.github.bumptech.glide:glide:$versions.glide"

deps.glide = glide

//group anko libraries
def anko = [:]
anko.common = "org.jetbrains.anko:anko-commons:$versions.anko"
anko.design = "org.jetbrains.anko:anko-design:$versions.anko"
anko.coroutine = "org.jetbrains.anko:anko-coroutines:$versions.anko"

deps.anko = anko

//Detect memory leaking
def leak = [:]
leak.debug = "com.squareup.leakcanary:leakcanary-android:$versions.leak_canary"
leak.release = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leak_canary"
leak.support_fragment = "com.squareup.leakcanary:leakcanary-support-fragment:$versions.leak_canary"

deps.leak = leak

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url "https://kotlin.bintray.com/kotlinx/" } // For kotlinx-metadata-jvm used by Room 2.1.0 (KT-27991)
}
ext.addRepos = this.&addRepos



